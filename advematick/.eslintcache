[{"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Layout.js":"1","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\App.js":"2","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Leads.js":"3","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Performers.js":"4","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Home.js":"5","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\index.js":"6","C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Clients.js":"7"},{"size":490,"mtime":1607439083629,"results":"8","hashOfConfig":"9"},{"size":1588,"mtime":1611065619371,"results":"10","hashOfConfig":"9"},{"size":9345,"mtime":1611604591095,"results":"11","hashOfConfig":"9"},{"size":2929,"mtime":1611065519514,"results":"12","hashOfConfig":"9"},{"size":3839,"mtime":1608710471307,"results":"13","hashOfConfig":"9"},{"size":378,"mtime":1607451951083,"results":"14","hashOfConfig":"9"},{"size":2681,"mtime":1608568358684,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qj0gb1",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Layout.js",[],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\App.js",[],["33","34"],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Leads.js",["35","36","37","38","39","40","41"],"import React, { Component } from 'react';\r\nimport './Leads.css';\r\nimport {NavLink} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport toRight from \"../images/toRight.png\";\r\nimport plus from '../images/plus.png';\r\nconst axios = require('axios');\r\n\r\n\r\nexport class Leads extends Component {\r\n    static displayName = Leads.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            orders: [],\r\n            clients: [],\r\n            clients_id:0,\r\n            stage1 : [],\r\n            stage2 : [],\r\n            stage3 : [],\r\n            name:''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\r\n        this.handleChangename= this.handleChangename.bind(this);\r\n        this.handleChangeclients = this.handleChangeclients.bind(this);\r\n    }\r\n\r\n    handleChangename(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    handleChangeclients(event) {\r\n        this.setState({clients_id: event.target.value});\r\n    }\r\n    handleSubmit(orders_id) {\r\n        axios.put(`http://localhost:3001/orders/update/${orders_id}`,{\r\n            Deleted:'1',\r\n            }\r\n        );\r\n        //event.preventDefault();\r\n    }\r\n    handleSubmitAdd() {\r\n        axios.post(`http://localhost:3001/orders/add`,{\r\n            Name:this.state.name,\r\n            Clients_id:this.state.clients_id,\r\n            }\r\n        );\r\n        //event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/orders')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        orders: result,\r\n                    });\r\n                    this.splitforstage(result);\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n        fetch('http://localhost:3001/clients')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        clients: result,\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    splitforstage(orders){\r\n        const stage1s = [];\r\n        const stage2s=[];\r\n        const stage3s=[];\r\n        orders.forEach(function(item, i) {\r\n            if(item.stage==\"1\"){\r\n                stage1s.push(item);\r\n            }else if(item.stage==\"2\"){\r\n                stage2s.push(item);\r\n            }else if(item.stage==\"3\"){\r\n                stage3s.push(item);\r\n            }\r\n        });\r\n        this.setState({\r\n            stage1: stage1s,\r\n            stage2: stage2s,\r\n            stage3: stage3s,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error, isLoaded, clients,stage1,stage2,stage3} = this.state;\r\n        if (error) {\r\n            return (\r\n                <div className=\"col\">\r\n                    Error: {error.message}\r\n                </div>\r\n            );\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div className=\"col-2\">\r\n                    Loading...\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                        <div className=\"row m-3\" >\r\n                        <form className=\"\" onSubmit={this.handleSubmitAdd}>\r\n                            <label  className=\"col-sm col-form-label\">Наименование проекта</label>\r\n                            <div className=\"col-sm\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\"\r\n                                   placeholder=\"\" value={this.state.name} onChange={this.handleChangename}/>\r\n                            </div>\r\n                            <label className=\"col-sm col-form-label\">Выберите клиента:</label>\r\n                            <div className=\"col-sm\">\r\n                                <select className=\"form-control\" value={this.state.clients_id} onChange={this.handleChangeclients}>\r\n                                    <option value=\"\"></option>\r\n                                    {clients.map(client =>\r\n                                        <option value={client.id}>{client.name}</option>\r\n                                      )}\r\n                                </select>\r\n                            </div>\r\n                            <NavLink>\r\n                                <input type=\"submit\" className=\"btn btn-primary\" onClick=\"this.disabled=true\" value=\"Добавить лида\"/>\r\n                            </NavLink>\r\n                        </form>\r\n                        </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"notworked\">Необработанные лиды</div>\r\n                            {stage1.map(stage =>\r\n                                <div className=\"card mt-3\">\r\n                                    <img className=\"card-img-top\"\r\n                                         alt=\"\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">{stage.name}</h4>\r\n                                        <p className=\"card-text\">\r\n                                            Описание: {stage.discription}<br/>\r\n                                            Описание товара: {stage.informaprod}<br/>\r\n                                            Предполагаемая цена: {stage.price} Р.\r\n                                        </p>\r\n                                        <NavLink tag={Link} to={`/setorders/${stage.id}`}>\r\n                                        <a href=\"\" className=\"btn btn-primary\">Постановка задачи</a>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                </div> )}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"working\">В работе</div>\r\n                            {stage2.map(stage =>\r\n                                <div className=\"card mt-3\">\r\n                                    <img className=\"card-img-top\"\r\n                                         alt=\"\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">{stage.name}</h4>\r\n                                        <p className=\"card-text\">\r\n                                            Описание: {stage.discription}<br/>\r\n                                            Описание товара: {stage.informaprod}<br/>\r\n                                            Предполагаемая цена: {stage.price} Р.\r\n                                        </p>\r\n                                        <NavLink tag={Link} to={`/qprogress/${stage.id}`}>\r\n                                        <a href=\"\" className=\"btn btn-primary\">Прогресс задания</a>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                </div> )}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"compliting\">Завершение</div>\r\n                            {stage3.map(stage =>\r\n                                <div className=\"card mt-3\">\r\n                                    <img className=\"card-img-top\"\r\n                                         alt=\"\"/>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">{stage.name}</h4>\r\n                                        <p className=\"card-text\">\r\n                                            Описание: {stage.discription}<br/>\r\n                                            Описание товара: {stage.informaprod}<br/>\r\n                                            Предполагаемая цена: {stage.price} Р.\r\n                                        </p>\r\n                                        <form onSubmit={this.handleSubmit(stage.id)}>\r\n                                        <NavLink>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" onClick=\"this.disabled=true\" value=\"Завершить\"/>\r\n                                        </NavLink>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Leads;",["42","43"],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Performers.js",[],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Home.js",["44","45"],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\index.js",[],"C:\\Users\\Konstantin\\Documents\\reactapp\\advematick\\src\\pages\\Clients.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":15},{"ruleId":"50","severity":1,"message":"54","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":94,"column":26,"nodeType":"57","messageId":"58","endLine":94,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":96,"column":32,"nodeType":"57","messageId":"58","endLine":96,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":98,"column":32,"nodeType":"57","messageId":"58","endLine":98,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":162,"column":41,"nodeType":"61","endLine":162,"endColumn":80},{"ruleId":"59","severity":1,"message":"60","line":181,"column":41,"nodeType":"61","endLine":181,"endColumn":80},{"ruleId":"46","replacedBy":"62"},{"ruleId":"48","replacedBy":"63"},{"ruleId":"50","severity":1,"message":"64","line":3,"column":9,"nodeType":"52","messageId":"53","endLine":3,"endColumn":16},{"ruleId":"50","severity":1,"message":"65","line":4,"column":9,"nodeType":"52","messageId":"53","endLine":4,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'toRight' is defined but never used.","Identifier","unusedVar","'plus' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["66"],["67"],"'NavLink' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]